/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Logica;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.dateTime;
import java.sql.Date;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Clint
 */
public class Registro extends javax.swing.JPanel {

    /**
     * Creates new form Registro
     */
    private Recreacionista recre;
    private Eventos even;
    
    private DateTimeFormatter formatter;
    private ArrayList<String> lista = new ArrayList<String>();
    int cont =0;
    
    private DefaultTableModel table_model_personas;
    
    
    public Registro() {
        initComponents();
    }

    public void setTableModel(DefaultTableModel table_model_personas){
        this.table_model_personas = table_model_personas;
    }
    
    public void refreshTableModel()
    {
        ArrayList<Eventos> lista_personas = RepositorioEvento.obtenerTodos();
        while (table_model_personas.getRowCount() > 0) {
            table_model_personas.removeRow(0);
        }
        
        for(Eventos p : lista_personas)
        {
            String[] data = { p.getNombre(), p.getHoraI(), p.getHoraF(),p.getUsuario(), p.getDescricion(), p.getFechaS()};
            table_model_personas.addRow(data);
        }
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        tipo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        apellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        documento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        registrar = new javax.swing.JButton();
        fecha = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        nombreE = new javax.swing.JTextField();
        fechaI = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        fechaF = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        Usuarios = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descripcion = new javax.swing.JTextArea();
        registrarevento = new javax.swing.JButton();

        jLabel8.setText("Tipo :");

        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", " " }));

        jLabel1.setText("Nombre :");

        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreKeyTyped(evt);
            }
        });

        jLabel2.setText("Apellido :");

        apellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                apellidoKeyTyped(evt);
            }
        });

        jLabel3.setText("Documento :");

        documento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                documentoActionPerformed(evt);
            }
        });
        documento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                documentoKeyTyped(evt);
            }
        });

        jLabel4.setText("Fecha de Nacimiento :");

        registrar.setText("Registrar");
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });

        fecha.setDateFormatString("d-MM-yyyy");

        jLabel5.setText("Nombre del evento  :");

        nombreE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreEActionPerformed(evt);
            }
        });
        nombreE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreEKeyTyped(evt);
            }
        });

        fechaI.setDateFormatString("d/MM/yyyy/HH:mm");

        jLabel15.setText("Fecha y Hora Inicial del evento");

        fechaF.setDateFormatString("d/MM/yyyy/HH:mm");

        jLabel16.setText("Fecha y Hora Final del evento");

        jLabel6.setText("Recreador :");

        jLabel7.setText("Descripcion :");

        descripcion.setColumns(20);
        descripcion.setRows(5);
        jScrollPane2.setViewportView(descripcion);

        registrarevento.setText("Registrar Evento");
        registrarevento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrareventoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(documento))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(registrar)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(10, 10, 10)
                        .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(186, 186, 186)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registrarevento)
                        .addGap(130, 130, 130))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombreE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fechaI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 53, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(fechaF, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(126, 126, 126))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(nombreE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fechaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(Usuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(registrar))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(registrarevento)
                .addContainerGap(125, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void documentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_documentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_documentoActionPerformed

    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed

    if( nombre.getText().isEmpty() ||
            apellido.getText().isEmpty() || documento.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Por favor diligencie todo el formulario", "Error", JOptionPane.ERROR_MESSAGE);
        } else {    
        switch(evt.getActionCommand())
            {
                case "Registrar":
                    
                    
                    LocalDateTime fecha_actual = LocalDateTime.now();
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-HH:mm");
                    
                    String fecha1 = fecha_actual.format(formatter);
                    
                    System.out.println(fecha.getDate().toString());
                    
                    System.out.println(fecha.getDateFormatString());
                    System.out.println("Fecha actual :"+fecha1);
                    int año= fecha.getCalendar().get(Calendar.YEAR);
                    int mes= fecha.getCalendar().get(Calendar.MONTH);
                    int dia= fecha.getCalendar().get(Calendar.DAY_OF_MONTH);
                    String fecha2 = año+"-"+mes+"-"+dia;
                    String cc = documento.getText();
                    String t = (String) tipo.getSelectedItem();
//String pnombre, String snombre, String apellido, String direccion, String correo, int id, int edad, int nhijos, int estrato, int ncarros, double altura, double peso, double salario, double puntaje, double icfes, String estudios, String origen, String razon, String aspiraciones, String futuro                    
                    recre = Recreacionista.crear(nombre.getText(),apellido.getText(),documento.getText(),fecha2, (String) tipo.getSelectedItem(),fecha1);
                    Repositorios.crear(recre);
                    JOptionPane.showMessageDialog(this, "Persona creada satisfactoriamente", "Bien", JOptionPane.INFORMATION_MESSAGE);
                    if(t=="2"){
                    Usuarios.addItem(cc);
                    }
                break;
        
        
    }
        
        
        
        
        
        
        
        
        
        
        fecha.getCalendar();
        System.out.println("Fecha :"+fecha.getDate());
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_registrarActionPerformed

    private void nombreEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreEActionPerformed

    private void registrareventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrareventoActionPerformed
    if( nombre.getText().isEmpty() ||
            descripcion.getText().isEmpty() || documento.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Por favor diligencie todo el formulario", "Error", JOptionPane.ERROR_MESSAGE);
        } else {   
        switch(evt.getActionCommand())
            {
                case "Registrar Evento":
                    
                    boolean paso=true;
                    LocalDateTime fecha_actual = LocalDateTime.now();
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-HH:mm");
                    
                    String fecha1 = fecha_actual.format(formatter);
                    
                    int diaaux=fecha_actual.getDayOfMonth();
                    
                    int año1= fechaI.getCalendar().get(Calendar.YEAR);
                    int mes1= fechaI.getCalendar().get(Calendar.MONTH);
                    int dia1= fechaI.getCalendar().get(Calendar.DAY_OF_MONTH);
                    int hora= fechaI.getCalendar().get(Calendar.HOUR_OF_DAY);
                    int minutos= fechaI.getCalendar().get(Calendar.MINUTE);
                    String fecha9 = año1+"-"+mes1+"-"+dia1+" / "+hora+":"+minutos;
                    
                    int año2= fechaF.getCalendar().get(Calendar.YEAR);
                    int mes2= fechaF.getCalendar().get(Calendar.MONTH);
                    int dia2= fechaF.getCalendar().get(Calendar.DAY_OF_MONTH);
                    int hora2= fechaF.getCalendar().get(Calendar.HOUR_OF_DAY);
                    int minutos2= fechaF.getCalendar().get(Calendar.MINUTE);
                    String fecha8 = año2+"-"+mes2+"-"+dia2+" / "+hora2+":"+minutos2;
                    
                    int diferencia=(diaaux-dia1)*-1;
                    System.out.println(diferencia);
                    
                    if(diferencia > 15){
                        JOptionPane.showMessageDialog(null,"Fecha Permitida" );
                    }
                    else{
                         JOptionPane.showMessageDialog(null, "la fecha del evento debe tener 15 dias de anterioridad", "Error", JOptionPane.ERROR_MESSAGE);   
                        break;
                    }
                    
                    
                    paso=RepositorioEvento.recorrer(lista, fecha8, fecha9);
                    if(paso==true){
                    lista.add(fecha8);
                    lista.add(fecha9);
                    //String nombre,String horaI, String horaF, String Usuario,String descripcion,String fechaS
                    even = Eventos.crearE(nombreE.getText(),fecha9,fecha8, (String) Usuarios.getSelectedItem(),descripcion.getText(),fecha1);
                    RepositorioEvento.crearEvento(even);
                    JOptionPane.showMessageDialog(this, "Persona creada satisfactoriamente", "Bien", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                         JOptionPane.showMessageDialog(null, "La fecha ya habia sido registrada", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    
                break;
        
        
            }
       
            fecha.getCalendar();
            System.out.println("Fecha :"+fecha.getDate());   
    }  
    }//GEN-LAST:event_registrareventoActionPerformed

    private void nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyTyped

          char c=evt.getKeyChar(); 
             
         
          if(Character.isDigit(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
               
               
               
          } 

        // TODO add your handling code here:
    }//GEN-LAST:event_nombreKeyTyped

    private void apellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoKeyTyped
        char c=evt.getKeyChar(); 
             
         
          if(Character.isDigit(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
    
          }// TODO add your handling code here:
    }//GEN-LAST:event_apellidoKeyTyped

    private void documentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_documentoKeyTyped
       
        char c=evt.getKeyChar(); 
             
         
          if(Character.isLetter(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
                
               
          } 


            // TODO add your handling code here:
    }//GEN-LAST:event_documentoKeyTyped

    private void nombreEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreEKeyTyped
            char c=evt.getKeyChar(); 
             
         
          if(Character.isDigit(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
    
          }
            


// TODO add your handling code here:
    }//GEN-LAST:event_nombreEKeyTyped
   
    
       private void resetForm() {
        nombre.setText("");
        documento.setText("");
        apellido.setText("");
        fecha.cleanup();
        
        
    }
    
   
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Usuarios;
    private javax.swing.JTextField apellido;
    private javax.swing.JTextArea descripcion;
    private javax.swing.JTextField documento;
    private com.toedter.calendar.JDateChooser fecha;
    private com.toedter.calendar.JDateChooser fechaF;
    private com.toedter.calendar.JDateChooser fechaI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField nombreE;
    private javax.swing.JButton registrar;
    private javax.swing.JButton registrarevento;
    private javax.swing.JComboBox<String> tipo;
    // End of variables declaration//GEN-END:variables

    
}
